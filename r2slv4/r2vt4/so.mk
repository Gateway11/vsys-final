#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

ifneq ($(CROSS_COMPILE),)
$(info CROSS_COMPILE=$(CROSS_COMPILE))
endif

CC := $(CROSS_COMPILE)gcc
CXX := $(CROSS_COMPILE)g++
AR := $(CROSS_COMPILE)ar
LD := $(CROSS_COMPILE)g++

WINDRES = windres
LIBDIR ?= 
LIB ?= 
INC ?=
LDFLAGS ?= 
ifneq ($(ALAB_THIRDLIB_DIR),)
INC += -I$(ALAB_THIRDLIB_DIR)/include
LDFLAGS += -lblis
else
INC += -I../../thirdlib/linux/include
endif

CFLAGS = -Wall -fexceptions -fPIC
RESINC = 

SRC_DIR = src
OUTDIR = ../bin
APP=libr2vt4.so


INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR) -L$(OUTDIR)/Debug
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = $(OUTDIR)/Debug/$(APP)

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR) -L$(OUTDIR)/Release
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = $(OUTDIR)/Release/$(APP)


DIRS := ${shell find ${SRC_DIR} -type d -print}  
SRCS := $(foreach dir,$(DIRS),$(wildcard $(addprefix $(dir)/,*.cpp)))

OBJ_DEBUG = $(addprefix $(OBJDIR_DEBUG)/,$(strip $(SRCS:.cpp=.o)))

OBJ_RELEASE = $(addprefix $(OBJDIR_RELEASE)/,$(strip $(SRCS:.cpp=.o)))

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d $(OUTDIR)/Debug || mkdir -p $(OUTDIR)/Debug
	$(foreach dir,$(DIRS),$(shell mkdir -p $(OBJDIR_DEBUG)/$(dir)))

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) -shared $(LIBDIR_DEBUG) $(OBJ_DEBUG)  -o $(OUT_DEBUG) $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/%.o: %.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c $< -o $@

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d $(OUTDIR)/Release || mkdir -p $(OUTDIR)/Release
	$(foreach dir,$(DIRS),$(shell mkdir -p $(OBJDIR_RELEASE)/$(dir)))

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) -shared $(LIBDIR_RELEASE) $(OBJ_RELEASE)  -o $(OUT_RELEASE) $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/%.o: %.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c $< -o $@

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

