/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.automotive.audiocontrol@2.0;

//import android.hardware.audio.common@6.0::AudioUsage;

interface IAudioHalBridge {
    /**
     * Notifies HAL of changes in output devices that the HAL should apply ducking to.
     *
     * This will be called in response to changes in audio focus, and will include a
     * {@link DuckingInfo} object per audio zone that experienced a change in audo focus.
     *
     * @param duckingInfos an array of {@link DuckingInfo} objects for the audio zones where audio
     * focus has changed.
     */
    oneway onDevicesToDuckChange(DuckingInfo[1] duckingInfos);

    /**
     * Notifies HAL of changes in output devices that the HAL should apply muting to.
     *
     * This will be called in response to changes in audio mute state for each volume group
     * and will include a {@link MutingInfo} object per audio zone that experienced a mute state
     * event.
     *
     * @param mutingInfos an array of {@link MutingInfo} objects for the audio zones where audio
     * mute state has changed.
     */
    oneway onDevicesToMuteChange(MutingInfo[1] mutingInfos);

    setAudioParamConfig(AudioParamConfig config) generates(int32_t retVal);
};
