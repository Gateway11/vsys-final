/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.2 at Mon Nov 15 15:08:44 2021. */
/* This auto generated file from protobuf is modified to optimize the memory.
USERS ARE NOT SUPPOSE TO MODIFY THIS
*/

#ifndef PB_BDD_PB2_PB_H_INCLUDED
#define PB_BDD_PB2_PB_H_INCLUDED
#include <pb.h>
#include "a2b/conf.h"
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _bdd_nodePowerMode {
    bdd_nodePowerMode_SLAVE_BUS_POWERED = 0,
    bdd_nodePowerMode_SLAVE_LOCAL_POWERED = 1
} bdd_nodePowerMode;

typedef enum _bdd_highPwrSwitchCfg {
    bdd_highPwrSwitchCfg_HPSW_CFG_0 = 0,
    bdd_highPwrSwitchCfg_HPSW_CFG_1 = 1,
    bdd_highPwrSwitchCfg_HPSW_CFG_4 = 4
} bdd_highPwrSwitchCfg;

typedef enum _bdd_NodeType {
    bdd_NODE_TYPE_UNKNOWN = 0,
    bdd_NODE_TYPE_MASTER = 1,
    bdd_NODE_TYPE_SLAVE = 2
} bdd_NodeType;

typedef enum _bdd_DiscoveryMode {
    bdd_DISCOVERY_MODE_SIMPLE = 0,
    bdd_DISCOVERY_MODE_MODIFIED = 1,
    bdd_DISCOVERY_MODE_OPTIMIZED = 2,
    bdd_DISCOVERY_MODE_ADVANCED = 3
} bdd_DiscoveryMode;

typedef enum _bdd_ConfigMethod {
    bdd_CONFIG_METHOD_AUTO = 0,
    bdd_CONFIG_METHOD_BDD = 1,
    bdd_CONFIG_METHOD_HYBRID = 2
} bdd_ConfigMethod;

typedef enum _bdd_ConfigPriority {
    bdd_CONFIG_PRIORITY_AUTO = 0,
    bdd_CONFIG_PRIORITY_BDD = 1
} bdd_ConfigPriority;

typedef enum _bdd_ConfigErrPolicy {
    bdd_CONFIG_ERR_POLICY_FATAL = 0,
    bdd_CONFIG_ERR_POLICY_ERROR = 1,
    bdd_CONFIG_ERR_POLICY_WARN = 2,
    bdd_CONFIG_ERR_POLCIY_NONE = 3
} bdd_ConfigErrPolicy;

typedef enum _bdd_A2bDeviceInterface {
    bdd_A2bDeviceInterface_I2C = 0,
    bdd_A2bDeviceInterface_SPI = 1
} bdd_A2bDeviceInterface;

typedef enum _bdd_A2bCableType {
    bdd_A2bCableType_UTP = 0,
    bdd_A2bCableType_XLR = 1,
    bdd_A2bCableType_RJ45 = 2
} bdd_A2bCableType;

/* Struct definitions */
typedef struct _bdd_CtrlRegs {
    uint32_t bcdnslots;
    uint32_t ldnslots;
    uint32_t lupslots;
    uint32_t dnslots;
    uint32_t upslots;
    uint32_t respcycs;
    uint32_t slotfmt;
    uint32_t suscfg;
    uint32_t datctl;
    uint32_t control;
    uint32_t swctl;
    uint32_t swctl2;
    uint32_t swctl3;
    uint32_t swctl4;
    uint32_t swctl5;
    uint32_t swctl6;

    bool has_bcdnslots;
    bool has_ldnslots;
    bool has_lupslots;
    bool has_dnslots;
    bool has_upslots;
    bool has_respcycs;
    bool has_slotfmt;
    bool has_suscfg;
    bool has_datctl;
    bool has_control;
    bool has_swctl;
    bool has_swctl2;
    bool has_swctl3;
    bool has_swctl4;
    bool has_swctl5;
    bool has_swctl6;
} bdd_CtrlRegs;

typedef struct _bdd_CustomNodeIdSettings {
    uint32_t bCustomNodeIdAuth;
    uint32_t bReadFrmMemory;
    uint32_t bReadFrmCommCh;
    uint32_t nDeviceAddr;
    char nNodeId[64];
    uint32_t nNodeIdLength;
    uint32_t nReadMemAddrWidth;
    uint32_t nReadMemAddr;
    uint32_t bReadGpioPins;
    pb_size_t aGpio_count;
    uint32_t aGpio[8];
    uint32_t nTimeOut;
    uint32_t nRetryCnt;
	
	bool has_bCustomNodeIdAuth;
    bool has_bReadFrmMemory;
    bool has_bReadFrmCommCh;
    bool has_nDeviceAddr;
    bool has_nNodeId;
    bool has_nNodeIdLength;
    bool has_nReadMemAddrWidth;
    bool has_nReadMemAddr;
    bool has_bReadGpioPins;
    bool has_nTimeOut;
    bool has_nRetryCnt;
} bdd_CustomNodeIdSettings;

typedef struct _bdd_DataSlotEnhancementRegs {
    uint32_t upmask0;
    uint32_t upmask1;
    uint32_t upmask2;
    uint32_t upmask3;
    uint32_t upoffset;
    uint32_t dnmask0;
    uint32_t dnmask1;
    uint32_t dnmask2;
    uint32_t dnmask3;
    uint32_t dnoffset;
	
	bool has_upmask0;
    bool has_upmask1;
    bool has_upmask2;
    bool has_upmask3;
    bool has_upoffset;
    bool has_dnmask0;
    bool has_dnmask1;
    bool has_dnmask2;
    bool has_dnmask3;
    bool has_dnoffset;
} bdd_DataSlotEnhancementRegs;

typedef struct _bdd_DataTunnelRegs {
	uint32_t dtcfg;
	uint32_t dtslots;
	uint32_t dtndnoffs;
	uint32_t dtnupoffs;
	
    bool has_dtcfg;
    bool has_dtslots;
    bool has_dtndnoffs;
    bool has_dtnupoffs;
} bdd_DataTunnelRegs;

typedef struct _bdd_DebugRegs {
    uint32_t debugReg1;
    uint32_t debugReg2;
    uint32_t debugReg3;
    uint32_t debugReg4;
    uint32_t debugReg5;
    uint32_t debugReg6;
    uint32_t debugReg7;
    uint32_t debugReg8;
    uint32_t debugReg9;
    uint32_t debugReg10;
	
	bool has_debugReg1;
    bool has_debugReg2;
    bool has_debugReg3;
    bool has_debugReg4;
    bool has_debugReg5;
    bool has_debugReg6;
    bool has_debugReg7;
    bool has_debugReg8;
    bool has_debugReg9;
    bool has_debugReg10;
} bdd_DebugRegs;

typedef struct _bdd_GpioDRegs {
    uint32_t gpioden;
    uint32_t gpiod0msk;
    uint32_t gpiod1msk;
    uint32_t gpiod2msk;
    uint32_t gpiod3msk;
    uint32_t gpiod4msk;
    uint32_t gpiod5msk;
    uint32_t gpiod6msk;
    uint32_t gpiod7msk;
    uint32_t gpioddat;
    uint32_t gpiodinv;
	
	bool has_gpioden;
    bool has_gpiod0msk;
    bool has_gpiod1msk;
    bool has_gpiod2msk;
    bool has_gpiod3msk;
    bool has_gpiod4msk;
    bool has_gpiod5msk;
    bool has_gpiod6msk;
    bool has_gpiod7msk;
    bool has_gpioddat;
    bool has_gpiodinv;
} bdd_GpioDRegs;

typedef struct _bdd_I2cI2sRegs {
    bool has_i2ccfg;
    uint32_t i2ccfg;
    bool has_pllctl;
    uint32_t pllctl;
    bool has_i2sgcfg;
    uint32_t i2sgcfg;
    bool has_i2scfg;
    uint32_t i2scfg;
    bool has_i2srate;
    uint32_t i2srate;
    bool has_i2stxoffset;
    uint32_t i2stxoffset;
    bool has_i2srxoffset;
    uint32_t i2srxoffset;
    bool has_syncoffset;
    uint32_t syncoffset;
    bool has_pdmctl;
    uint32_t pdmctl;
    bool has_errmgmt;
    uint32_t errmgmt;
    bool has_i2srrate;
    uint32_t i2srrate;
    bool has_i2srrctl;
    uint32_t i2srrctl;
    bool has_i2srrsoffs;
    uint32_t i2srrsoffs;
    bool has_pdmctl2;
    uint32_t pdmctl2;
} bdd_I2cI2sRegs;

typedef struct _bdd_I2sCrossbarRegs {
    bool has_has_rxmask;
    bool has_rxmask;
    pb_size_t rxmask_count;
    uint32_t rxmask[8];
    bool has_has_txcrossbar;
    bool has_txcrossbar;
    pb_size_t txcrossbar_count;
    uint32_t txcrossbar[32];
} bdd_I2sCrossbarRegs;

typedef struct _bdd_IntRegs {
    uint32_t intmsk0;
    uint32_t intmsk1;
    uint32_t intmsk2;
    uint32_t becctl;
	
	bool has_intmsk0;
	bool has_intmsk1;
	bool has_intmsk2;
	bool has_becctl;
} bdd_IntRegs;

typedef struct _bdd_MailboxRegs {
    uint32_t mbox0ctl;
    uint32_t mbox1ctl;
	
	bool has_mbox0ctl;
	bool has_mbox1ctl;
} bdd_MailboxRegs;

typedef struct _bdd_MetaData {
    uint32_t date;
    uint32_t version;
    bool has_author;
    char author[64];
    bool has_organization;
    char organization[64];
    bool has_company;
    char company[64];
    bool has_bddVersion;
    uint32_t bddVersion;
} bdd_MetaData;

typedef struct _bdd_NetworkPolicy {
    bdd_DiscoveryMode discoveryMode;
    bdd_ConfigMethod cfgMethod;
    bdd_ConfigPriority cfgPriority;
    bdd_ConfigErrPolicy cfgErrPolicy;
    bool has_has_common_SSSettings;
    bool has_common_SSSettings;
    bool has_discoveryStartDelay;
    uint32_t discoveryStartDelay;
    bool has_bOverrideSelfDisc;
    bool bOverrideSelfDisc;
    bool has_bCrossTalkFixApply;
    bool bCrossTalkFixApply;
    bool has_nRediscWaitTime;
    uint32_t nRediscWaitTime;
    bool has_bEnablePartialDisc;
    bool bEnablePartialDisc;
    bool has_eA2bDeviceInterface;
    bdd_A2bDeviceInterface eA2bDeviceInterface;
    bool has_eCableType;
    bdd_A2bCableType eCableType;
} bdd_NetworkPolicy;

typedef struct _bdd_NodeSettings {
    bdd_nodePowerMode bLocalPwrd;
    bdd_highPwrSwitchCfg eHighPwrSwitchCfg;
	
	bool has_bLocalPwrd;
	bool has_eHighPwrSwitchCfg;
} bdd_NodeSettings;

typedef struct _bdd_PinIoRegs {
    uint32_t clkcfg;
    uint32_t gpiooen;
    uint32_t gpioien;
    uint32_t pinten;
    uint32_t pintinv;
    uint32_t pincfg;
    uint32_t gpiodat;
    uint32_t clk1cfg;
    uint32_t clk2cfg;
	
	bool has_clkcfg;
    bool has_gpiooen;
    bool has_gpioien;
    bool has_pinten;
    bool has_pintinv;
    bool has_pincfg;
    bool has_gpiodat;
    bool has_clk1cfg;
    bool has_clk2cfg;
} bdd_PinIoRegs;

typedef struct _bdd_PwmRegs {
    bool has_pwmcfg;
    uint32_t pwmcfg;
    bool has_pwmfreq;
    uint32_t pwmfreq;
    bool has_pwmblink1;
    uint32_t pwmblink1;
    bool has_pwmblink2;
    uint32_t pwmblink2;
    bool has_has_pwmval;
    bool has_pwmval;
    pb_size_t pwmval_count;
    uint32_t pwmval[6];
    bool has_has_pwmoe;
    bool has_pwmoe;
    pb_size_t pwmoe_count;
    uint32_t pwmoe[2];
} bdd_PwmRegs;

typedef struct _bdd_SpiRegs {
    uint32_t spicfg;
    uint32_t spickdiv;
    uint32_t spifdsize;
    uint32_t spifdtarg;
    uint32_t spipicfg;
    uint32_t spiint;
    uint32_t spimsk;

    bool has_spicfg;
    bool has_spickdiv;
    bool has_spifdsize;
    bool has_spifdtarg;
    bool has_spipicfg;
    bool has_spiint;
    bool has_spimsk;
} bdd_SpiRegs;

typedef struct _bdd_TuningRegs {
    uint32_t vregctl;
    uint32_t txactl;
    uint32_t rxactl;
    uint32_t txbctl;
    uint32_t rxbctl;
    uint32_t txctl;
    uint32_t rxctl;

    bool has_vregctl;
    bool has_txactl;
    bool has_rxactl;
    bool has_txbctl;
    bool has_rxbctl;
    bool has_txctl;
    bool has_rxctl;
} bdd_TuningRegs;

typedef struct _bdd_VmtrRegs {
    uint32_t vmtr_ven;
    uint32_t vmtr_inten;
    uint32_t vmtr_mxstat;
    uint32_t vmtr_mnstat;
    uint32_t vmtr_vmax0;
    uint32_t vmtr_vmin0;
    uint32_t vmtr_vmax1;
    uint32_t vmtr_vmin1;
    uint32_t vmtr_vmax2;
    uint32_t vmtr_vmin2;
    uint32_t vmtr_vmax3;
    uint32_t vmtr_vmin3;
    uint32_t vmtr_vmax4;
    uint32_t vmtr_vmin4;
    uint32_t vmtr_vmax5;
    uint32_t vmtr_vmin5;
    uint32_t vmtr_vmax6;
    uint32_t vmtr_vmin6;

    bool has_vmtr_ven;
    bool has_vmtr_inten;
    bool has_vmtr_mxstat;
    bool has_vmtr_mnstat;
    bool has_vmtr_vmax0;
    bool has_vmtr_vmin0;
    bool has_vmtr_vmax1;
    bool has_vmtr_vmin1;
    bool has_vmtr_vmax2;
    bool has_vmtr_vmin2;
    bool has_vmtr_vmax3;
    bool has_vmtr_vmin3;
    bool has_vmtr_vmax4;
    bool has_vmtr_vmin4;
    bool has_vmtr_vmax5;
    bool has_vmtr_vmin5;
    bool has_vmtr_vmax6;
    bool has_vmtr_vmin6;
} bdd_VmtrRegs;

typedef struct _bdd_NodeDescriptor {
    uint32_t vendor;
    uint32_t product;
    uint32_t version;
    bool has_oCustomNodeIdSettings;
    bdd_CustomNodeIdSettings oCustomNodeIdSettings;
    bool has_btwoStepDisc;
    uint32_t btwoStepDisc;
} bdd_NodeDescriptor;

typedef struct _bdd_Node {
    bdd_NodeType nodeType;
    bdd_CtrlRegs ctrlRegs;
    bool has_intRegs;
    bdd_IntRegs intRegs;
    bool has_tuningRegs;
    bdd_TuningRegs tuningRegs;
    bdd_I2cI2sRegs i2cI2sRegs;
    bdd_PinIoRegs pinIoRegs;
    bool ignEeprom;
    bool verifyNodeDescr;
    bdd_NodeDescriptor nodeDescr;
    uint32_t downstreamBcastCnt;
    pb_size_t downstream_count;
    uint32_t downstream[32];
    uint32_t upstreamBcastCnt;
    pb_size_t upstream_count;
    uint32_t upstream[32];
    bool has_slotEnh;
    bdd_DataSlotEnhancementRegs slotEnh;
    bool has_gpioDist;
    bdd_GpioDRegs gpioDist;
    bool has_mbox;
    bdd_MailboxRegs mbox;
    bool has_i2sCrossbarRegs;
    bdd_I2sCrossbarRegs i2sCrossbarRegs;
    bool has_pwmRegs;
    bdd_PwmRegs pwmRegs;
    bool has_spiRegs;
    bdd_SpiRegs spiRegs;
    bool has_dataTunnelRegs;
    bdd_DataTunnelRegs dataTunnelRegs;
    bool has_vmtrRegs;
    bdd_VmtrRegs vmtrRegs;
    bool has_debugReg;
    bdd_DebugRegs debugReg;
    bool has_nodeSetting;
    bdd_NodeSettings nodeSetting;
} bdd_Node;

typedef struct _bdd_Network {
    bdd_MetaData metaData;
    uint32_t masterAddr;
    bdd_NetworkPolicy policy;
    pb_size_t nodes_count;
    bdd_Node nodes[A2B_CONF_MAX_NUM_SLAVE_NODES+1]; // +1 for master
    uint32_t sampleRate;
} bdd_Network;

/* Default values for struct fields */
extern const uint32_t bdd_MetaData_bddVersion_default;

/* Initializer values for message structs */
#define bdd_MetaData_init_default                {0, 0, false, "", false, "", false, "", false, 1u}
#define bdd_CustomNodeIdSettings_init_default    {false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, 0, false, 0, false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, 0}
#define bdd_NodeDescriptor_init_default          {0, 0, 0, false, bdd_CustomNodeIdSettings_init_default, false, 0}
#define bdd_CtrlRegs_init_default                {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_VmtrRegs_init_default                {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_I2sCrossbarRegs_init_default         {false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define bdd_PwmRegs_init_default                 {false, 0, false, 0, false, 0, false, 0, false, 0, 0, {0, 0, 0, 0, 0, 0}, false, 0, 0, {0, 0}}
#define bdd_SpiRegs_init_default                 {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_DataTunnelRegs_init_default          {false, 0, false, 0, false, 0, false, 0}
#define bdd_IntRegs_init_default                 {false, 0, false, 0, false, 0, false, 0}
#define bdd_TuningRegs_init_default              {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_I2cI2sRegs_init_default              {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_PinIoRegs_init_default               {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_DataSlotEnhancementRegs_init_default {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_GpioDRegs_init_default               {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_MailboxRegs_init_default             {false, 0, false, 0}
#define bdd_DebugRegs_init_default               {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_NodeSettings_init_default            {false, (bdd_nodePowerMode)0, false, (bdd_highPwrSwitchCfg)0}
#define bdd_Node_init_default                    {(bdd_NodeType)0, bdd_CtrlRegs_init_default, false, bdd_IntRegs_init_default, false, bdd_TuningRegs_init_default, bdd_I2cI2sRegs_init_default, bdd_PinIoRegs_init_default, 0, 0, bdd_NodeDescriptor_init_default, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, false, bdd_DataSlotEnhancementRegs_init_default, false, bdd_GpioDRegs_init_default, false, bdd_MailboxRegs_init_default, false, bdd_I2sCrossbarRegs_init_default, false, bdd_PwmRegs_init_default, false, bdd_SpiRegs_init_default, false, bdd_DataTunnelRegs_init_default, false, bdd_VmtrRegs_init_default, false, bdd_DebugRegs_init_default, false, bdd_NodeSettings_init_default}
#define bdd_NetworkPolicy_init_default           {(bdd_DiscoveryMode)0, (bdd_ConfigMethod)0, (bdd_ConfigPriority)0, (bdd_ConfigErrPolicy)0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, (bdd_A2bDeviceInterface)0, false, (bdd_A2bCableType)0}
#define bdd_Network_init_default                 {bdd_MetaData_init_default, 0, bdd_NetworkPolicy_init_default, 0, {bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default, bdd_Node_init_default}, 0}
#define bdd_MetaData_init_zero                   {0, 0, false, "", false, "", false, "", false, 0}
#define bdd_CustomNodeIdSettings_init_zero       {false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, 0, false, 0, false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, 0}
#define bdd_NodeDescriptor_init_zero             {0, 0, 0, false, bdd_CustomNodeIdSettings_init_zero, false, 0}
#define bdd_CtrlRegs_init_zero                   {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_VmtrRegs_init_zero                   {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_I2sCrossbarRegs_init_zero            {false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define bdd_PwmRegs_init_zero                    {false, 0, false, 0, false, 0, false, 0, false, 0, 0, {0, 0, 0, 0, 0, 0}, false, 0, 0, {0, 0}}
#define bdd_SpiRegs_init_zero                    {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_DataTunnelRegs_init_zero             {false, 0, false, 0, false, 0, false, 0}
#define bdd_IntRegs_init_zero                    {false, 0, false, 0, false, 0, false, 0}
#define bdd_TuningRegs_init_zero                 {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_I2cI2sRegs_init_zero                 {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_PinIoRegs_init_zero                  {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_DataSlotEnhancementRegs_init_zero    {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_GpioDRegs_init_zero                  {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_MailboxRegs_init_zero                {false, 0, false, 0}
#define bdd_DebugRegs_init_zero                  {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define bdd_NodeSettings_init_zero               {false, (bdd_nodePowerMode)0, false, (bdd_highPwrSwitchCfg)0}
#define bdd_Node_init_zero                       {(bdd_NodeType)0, bdd_CtrlRegs_init_zero, false, bdd_IntRegs_init_zero, false, bdd_TuningRegs_init_zero, bdd_I2cI2sRegs_init_zero, bdd_PinIoRegs_init_zero, 0, 0, bdd_NodeDescriptor_init_zero, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, false, bdd_DataSlotEnhancementRegs_init_zero, false, bdd_GpioDRegs_init_zero, false, bdd_MailboxRegs_init_zero, false, bdd_I2sCrossbarRegs_init_zero, false, bdd_PwmRegs_init_zero, false, bdd_SpiRegs_init_zero, false, bdd_DataTunnelRegs_init_zero, false, bdd_VmtrRegs_init_zero, false, bdd_DebugRegs_init_zero, false, bdd_NodeSettings_init_zero}
#define bdd_NetworkPolicy_init_zero              {(bdd_DiscoveryMode)0, (bdd_ConfigMethod)0, (bdd_ConfigPriority)0, (bdd_ConfigErrPolicy)0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, (bdd_A2bDeviceInterface)0, false, (bdd_A2bCableType)0}
#define bdd_Network_init_zero                    {bdd_MetaData_init_zero, 0, bdd_NetworkPolicy_init_zero, 0, {bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero, bdd_Node_init_zero}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define bdd_CtrlRegs_bcdnslots_tag               1
#define bdd_CtrlRegs_ldnslots_tag                2
#define bdd_CtrlRegs_lupslots_tag                3
#define bdd_CtrlRegs_dnslots_tag                 4
#define bdd_CtrlRegs_upslots_tag                 5
#define bdd_CtrlRegs_respcycs_tag                6
#define bdd_CtrlRegs_slotfmt_tag                 7
#define bdd_CtrlRegs_suscfg_tag                  8
#define bdd_CtrlRegs_datctl_tag                  9
#define bdd_CtrlRegs_control_tag                 10
#define bdd_CtrlRegs_swctl_tag                   11
#define bdd_CtrlRegs_swctl2_tag                  12
#define bdd_CtrlRegs_swctl3_tag                  13
#define bdd_CtrlRegs_swctl4_tag                  14
#define bdd_CtrlRegs_swctl5_tag                  15
#define bdd_CtrlRegs_swctl6_tag                  16
#define bdd_CustomNodeIdSettings_bCustomNodeIdAuth_tag 1
#define bdd_CustomNodeIdSettings_bReadFrmMemory_tag 2
#define bdd_CustomNodeIdSettings_bReadFrmCommCh_tag 3
#define bdd_CustomNodeIdSettings_nDeviceAddr_tag 4
#define bdd_CustomNodeIdSettings_nNodeId_tag     5
#define bdd_CustomNodeIdSettings_nNodeIdLength_tag 6
#define bdd_CustomNodeIdSettings_nReadMemAddrWidth_tag 7
#define bdd_CustomNodeIdSettings_nReadMemAddr_tag 8
#define bdd_CustomNodeIdSettings_bReadGpioPins_tag 9
#define bdd_CustomNodeIdSettings_aGpio_tag       10
#define bdd_CustomNodeIdSettings_nTimeOut_tag    11
#define bdd_CustomNodeIdSettings_nRetryCnt_tag   12
#define bdd_DataSlotEnhancementRegs_upmask0_tag  1
#define bdd_DataSlotEnhancementRegs_upmask1_tag  2
#define bdd_DataSlotEnhancementRegs_upmask2_tag  3
#define bdd_DataSlotEnhancementRegs_upmask3_tag  4
#define bdd_DataSlotEnhancementRegs_upoffset_tag 5
#define bdd_DataSlotEnhancementRegs_dnmask0_tag  6
#define bdd_DataSlotEnhancementRegs_dnmask1_tag  7
#define bdd_DataSlotEnhancementRegs_dnmask2_tag  8
#define bdd_DataSlotEnhancementRegs_dnmask3_tag  9
#define bdd_DataSlotEnhancementRegs_dnoffset_tag 10
#define bdd_DataTunnelRegs_dtcfg_tag             1
#define bdd_DataTunnelRegs_dtslots_tag           2
#define bdd_DataTunnelRegs_dtndnoffs_tag         3
#define bdd_DataTunnelRegs_dtnupoffs_tag         4
#define bdd_DebugRegs_debugReg1_tag              1
#define bdd_DebugRegs_debugReg2_tag              2
#define bdd_DebugRegs_debugReg3_tag              3
#define bdd_DebugRegs_debugReg4_tag              4
#define bdd_DebugRegs_debugReg5_tag              5
#define bdd_DebugRegs_debugReg6_tag              6
#define bdd_DebugRegs_debugReg7_tag              7
#define bdd_DebugRegs_debugReg8_tag              8
#define bdd_DebugRegs_debugReg9_tag              9
#define bdd_DebugRegs_debugReg10_tag             10
#define bdd_GpioDRegs_gpioden_tag                1
#define bdd_GpioDRegs_gpiod0msk_tag              2
#define bdd_GpioDRegs_gpiod1msk_tag              3
#define bdd_GpioDRegs_gpiod2msk_tag              4
#define bdd_GpioDRegs_gpiod3msk_tag              5
#define bdd_GpioDRegs_gpiod4msk_tag              6
#define bdd_GpioDRegs_gpiod5msk_tag              7
#define bdd_GpioDRegs_gpiod6msk_tag              8
#define bdd_GpioDRegs_gpiod7msk_tag              9
#define bdd_GpioDRegs_gpioddat_tag               10
#define bdd_GpioDRegs_gpiodinv_tag               11
#define bdd_I2cI2sRegs_i2ccfg_tag                1
#define bdd_I2cI2sRegs_pllctl_tag                2
#define bdd_I2cI2sRegs_i2sgcfg_tag               3
#define bdd_I2cI2sRegs_i2scfg_tag                4
#define bdd_I2cI2sRegs_i2srate_tag               5
#define bdd_I2cI2sRegs_i2stxoffset_tag           6
#define bdd_I2cI2sRegs_i2srxoffset_tag           7
#define bdd_I2cI2sRegs_syncoffset_tag            8
#define bdd_I2cI2sRegs_pdmctl_tag                9
#define bdd_I2cI2sRegs_errmgmt_tag               10
#define bdd_I2cI2sRegs_i2srrate_tag              11
#define bdd_I2cI2sRegs_i2srrctl_tag              12
#define bdd_I2cI2sRegs_i2srrsoffs_tag            13
#define bdd_I2cI2sRegs_pdmctl2_tag               14
#define bdd_I2sCrossbarRegs_has_rxmask_tag       1
#define bdd_I2sCrossbarRegs_rxmask_tag           2
#define bdd_I2sCrossbarRegs_has_txcrossbar_tag   3
#define bdd_I2sCrossbarRegs_txcrossbar_tag       4
#define bdd_IntRegs_intmsk0_tag                  1
#define bdd_IntRegs_intmsk1_tag                  2
#define bdd_IntRegs_intmsk2_tag                  3
#define bdd_IntRegs_becctl_tag                   4
#define bdd_MailboxRegs_mbox0ctl_tag             1
#define bdd_MailboxRegs_mbox1ctl_tag             2
#define bdd_MetaData_date_tag                    1
#define bdd_MetaData_version_tag                 2
#define bdd_MetaData_author_tag                  3
#define bdd_MetaData_organization_tag            4
#define bdd_MetaData_company_tag                 5
#define bdd_MetaData_bddVersion_tag              6
#define bdd_NetworkPolicy_discoveryMode_tag      1
#define bdd_NetworkPolicy_cfgMethod_tag          2
#define bdd_NetworkPolicy_cfgPriority_tag        3
#define bdd_NetworkPolicy_cfgErrPolicy_tag       4
#define bdd_NetworkPolicy_has_common_SSSettings_tag 5
#define bdd_NetworkPolicy_discoveryStartDelay_tag 6
#define bdd_NetworkPolicy_bOverrideSelfDisc_tag  7
#define bdd_NetworkPolicy_bCrossTalkFixApply_tag 8
#define bdd_NetworkPolicy_nRediscWaitTime_tag    9
#define bdd_NetworkPolicy_bEnablePartialDisc_tag 10
#define bdd_NetworkPolicy_eA2bDeviceInterface_tag 11
#define bdd_NetworkPolicy_eCableType_tag         12
#define bdd_NodeSettings_bLocalPwrd_tag          1
#define bdd_NodeSettings_eHighPwrSwitchCfg_tag   2
#define bdd_PinIoRegs_clkcfg_tag                 1
#define bdd_PinIoRegs_gpiooen_tag                3
#define bdd_PinIoRegs_gpioien_tag                4
#define bdd_PinIoRegs_pinten_tag                 5
#define bdd_PinIoRegs_pintinv_tag                6
#define bdd_PinIoRegs_pincfg_tag                 7
#define bdd_PinIoRegs_gpiodat_tag                8
#define bdd_PinIoRegs_clk1cfg_tag                9
#define bdd_PinIoRegs_clk2cfg_tag                10
#define bdd_PwmRegs_pwmcfg_tag                   1
#define bdd_PwmRegs_pwmfreq_tag                  2
#define bdd_PwmRegs_pwmblink1_tag                3
#define bdd_PwmRegs_pwmblink2_tag                4
#define bdd_PwmRegs_has_pwmval_tag               5
#define bdd_PwmRegs_pwmval_tag                   6
#define bdd_PwmRegs_has_pwmoe_tag                7
#define bdd_PwmRegs_pwmoe_tag                    8
#define bdd_SpiRegs_spicfg_tag                   1
#define bdd_SpiRegs_spickdiv_tag                 2
#define bdd_SpiRegs_spifdsize_tag                3
#define bdd_SpiRegs_spifdtarg_tag                4
#define bdd_SpiRegs_spipicfg_tag                 5
#define bdd_SpiRegs_spiint_tag                   6
#define bdd_SpiRegs_spimsk_tag                   7
#define bdd_TuningRegs_vregctl_tag               1
#define bdd_TuningRegs_txactl_tag                2
#define bdd_TuningRegs_rxactl_tag                3
#define bdd_TuningRegs_txbctl_tag                4
#define bdd_TuningRegs_rxbctl_tag                5
#define bdd_TuningRegs_txctl_tag                 6
#define bdd_TuningRegs_rxctl_tag                 7
#define bdd_VmtrRegs_vmtr_ven_tag                1
#define bdd_VmtrRegs_vmtr_inten_tag              2
#define bdd_VmtrRegs_vmtr_mxstat_tag             3
#define bdd_VmtrRegs_vmtr_mnstat_tag             4
#define bdd_VmtrRegs_vmtr_vmax0_tag              5
#define bdd_VmtrRegs_vmtr_vmin0_tag              6
#define bdd_VmtrRegs_vmtr_vmax1_tag              7
#define bdd_VmtrRegs_vmtr_vmin1_tag              8
#define bdd_VmtrRegs_vmtr_vmax2_tag              9
#define bdd_VmtrRegs_vmtr_vmin2_tag              10
#define bdd_VmtrRegs_vmtr_vmax3_tag              11
#define bdd_VmtrRegs_vmtr_vmin3_tag              12
#define bdd_VmtrRegs_vmtr_vmax4_tag              13
#define bdd_VmtrRegs_vmtr_vmin4_tag              14
#define bdd_VmtrRegs_vmtr_vmax5_tag              15
#define bdd_VmtrRegs_vmtr_vmin5_tag              16
#define bdd_VmtrRegs_vmtr_vmax6_tag              17
#define bdd_VmtrRegs_vmtr_vmin6_tag              18
#define bdd_NodeDescriptor_vendor_tag            1
#define bdd_NodeDescriptor_product_tag           2
#define bdd_NodeDescriptor_version_tag           3
#define bdd_NodeDescriptor_oCustomNodeIdSettings_tag 4
#define bdd_NodeDescriptor_btwoStepDisc_tag      5
#define bdd_Node_nodeType_tag                    1
#define bdd_Node_ctrlRegs_tag                    2
#define bdd_Node_intRegs_tag                     3
#define bdd_Node_tuningRegs_tag                  4
#define bdd_Node_i2cI2sRegs_tag                  5
#define bdd_Node_i2sCrossbarRegs_tag             17
#define bdd_Node_pwmRegs_tag                     18
#define bdd_Node_spiRegs_tag                     19
#define bdd_Node_dataTunnelRegs_tag              20
#define bdd_Node_vmtrRegs_tag                    21
#define bdd_Node_pinIoRegs_tag                   6
#define bdd_Node_ignEeprom_tag                   7
#define bdd_Node_verifyNodeDescr_tag             8
#define bdd_Node_nodeDescr_tag                   9
#define bdd_Node_downstreamBcastCnt_tag          10
#define bdd_Node_downstream_tag                  11
#define bdd_Node_upstreamBcastCnt_tag            12
#define bdd_Node_upstream_tag                    13
#define bdd_Node_slotEnh_tag                     14
#define bdd_Node_gpioDist_tag                    15
#define bdd_Node_mbox_tag                        16
#define bdd_Node_debugReg_tag                    22
#define bdd_Node_nodeSetting_tag                 23
#define bdd_Network_metaData_tag                 1
#define bdd_Network_masterAddr_tag               2
#define bdd_Network_policy_tag                   3
#define bdd_Network_nodes_tag                    4
#define bdd_Network_sampleRate_tag               5

/* Struct field encoding specification for nanopb */
extern const pb_field_t bdd_MetaData_fields[7];
extern const pb_field_t bdd_CustomNodeIdSettings_fields[13];
extern const pb_field_t bdd_NodeDescriptor_fields[6];
extern const pb_field_t bdd_CtrlRegs_fields[17];
extern const pb_field_t bdd_VmtrRegs_fields[19];
extern const pb_field_t bdd_I2sCrossbarRegs_fields[5];
extern const pb_field_t bdd_PwmRegs_fields[9];
extern const pb_field_t bdd_SpiRegs_fields[8];
extern const pb_field_t bdd_DataTunnelRegs_fields[5];
extern const pb_field_t bdd_IntRegs_fields[5];
extern const pb_field_t bdd_TuningRegs_fields[8];
extern const pb_field_t bdd_I2cI2sRegs_fields[15];
extern const pb_field_t bdd_PinIoRegs_fields[10];
extern const pb_field_t bdd_DataSlotEnhancementRegs_fields[11];
extern const pb_field_t bdd_GpioDRegs_fields[12];
extern const pb_field_t bdd_MailboxRegs_fields[3];
extern const pb_field_t bdd_DebugRegs_fields[11];
extern const pb_field_t bdd_NodeSettings_fields[3];
extern const pb_field_t bdd_Node_fields[24];
extern const pb_field_t bdd_NetworkPolicy_fields[13];
extern const pb_field_t bdd_Network_fields[6];

/* Maximum encoded size of messages (where known) */
#define bdd_MetaData_size                        214
#define bdd_CustomNodeIdSettings_size            174
#define bdd_NodeDescriptor_size                  201
#define bdd_CtrlRegs_size                        97
#define bdd_VmtrRegs_size                        111
#define bdd_I2sCrossbarRegs_size                 244
#define bdd_PwmRegs_size                         76
#define bdd_SpiRegs_size                         42
#define bdd_DataTunnelRegs_size                  24
#define bdd_IntRegs_size                         24
#define bdd_TuningRegs_size                      42
#define bdd_I2cI2sRegs_size                      84
#define bdd_PinIoRegs_size                       54
#define bdd_DataSlotEnhancementRegs_size         60
#define bdd_GpioDRegs_size                       66
#define bdd_MailboxRegs_size                     12
#define bdd_DebugRegs_size                       60
#define bdd_NodeSettings_size                    12
#define bdd_Node_size                            1657
#define bdd_NetworkPolicy_size                   56
#define bdd_Network_size                         28507

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
